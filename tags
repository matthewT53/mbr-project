!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ApplySymbols	src/bochsdbg/mbr.py	/^def ApplySymbols():$/;"	f
BOOT_END	src/bochsdbg/mbr.py	/^BOOT_END    = BOOT_START + BOOT_SIZE$/;"	v
BOOT_SIZE	src/bochsdbg/mbr.py	/^BOOT_SIZE   = 0x7C00 + SECTOR_SIZE * 4$/;"	v
BOOT_START	src/bochsdbg/mbr.py	/^BOOT_START  = 0x7C00$/;"	v
CUSTOM_MBR	src/scripts/fix_mbr_win.py	/^CUSTOM_MBR          = "..\/bin\/custom_mbr.bin"$/;"	v
DEFAULT_WINDOWS_MBR	src/scripts/fix_mbr_win.py	/^DEFAULT_WINDOWS_MBR = "..\/bin\/vm_mbr.bin"$/;"	v
DISK_FILENAME	src/scripts/update_disk.py	/^DISK_FILENAME       = "..\/bochsdbg\/disk.img"$/;"	v
IMGNAME	src/bochsdbg/mbr.py	/^IMGNAME     = "disk.img"$/;"	v
MBRNAME	src/bochsdbg/mbr.py	/^MBRNAME    = "..\/bin\/boot.bin"$/;"	v
MBR_FILENAME	src/scripts/update_disk.py	/^MBR_FILENAME        = "..\/bin\/mbr_fixed.bin"$/;"	v
MbrLoader	src/bochsdbg/mbr.py	/^def MbrLoader():$/;"	f
PART_1	src/asm/check.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_1	src/asm/custom_mbr.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_1	src/asm/read_sector_lba.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_1	src/asm/sample.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_1	src/asm/write_sector_lba.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_1	src/asm/xor.asm	/^PART_1: times 16 db 0xaa$/;"	l
PART_2	src/asm/check.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_2	src/asm/custom_mbr.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_2	src/asm/read_sector_lba.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_2	src/asm/sample.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_2	src/asm/write_sector_lba.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_2	src/asm/xor.asm	/^PART_2: times 16 db 0xbb$/;"	l
PART_3	src/asm/check.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_3	src/asm/custom_mbr.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_3	src/asm/read_sector_lba.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_3	src/asm/sample.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_3	src/asm/write_sector_lba.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_3	src/asm/xor.asm	/^PART_3: times 16 db 0xcc$/;"	l
PART_4	src/asm/check.asm	/^PART_4: times 16 db 0xdd$/;"	l
PART_4	src/asm/custom_mbr.asm	/^PART_4: times 16 db 0xdd$/;"	l
PART_4	src/asm/read_sector_lba.asm	/^PART_4: times 16 db 0xdd$/;"	l
PART_4	src/asm/sample.asm	/^PART_4: times 16 db 0xdd$/;"	l
PART_4	src/asm/write_sector_lba.asm	/^PART_4: times 16 db 0xdd$/;"	l
PART_4	src/asm/xor.asm	/^PART_4: times 16 db 0xdd$/;"	l
PAYLOAD_FILENAME	src/scripts/update_disk.py	/^PAYLOAD_FILENAME    = "..\/bin\/payload.bin"$/;"	v
ParseMap	src/bochsdbg/mbr.py	/^def ParseMap(map_file):$/;"	f
RESULT_FILE	src/scripts/fix_mbr_win.py	/^RESULT_FILE         = "..\/bin\/mbr_fixed.bin"$/;"	v
SECTOR2	src/bochsdbg/mbr.py	/^SECTOR2     = BOOT_START + SECTOR_SIZE$/;"	v
SECTOR_SIZE	src/bochsdbg/mbr.py	/^SECTOR_SIZE = 512$/;"	v
SECTOR_SIZE	src/scripts/create_disk.py	/^SECTOR_SIZE = 512$/;"	v
SECTOR_SIZE	src/scripts/update_disk.py	/^SECTOR_SIZE         = 512$/;"	v
UpdateImage	src/bochsdbg/mbr.py	/^def UpdateImage(imgfile, mbrfile):$/;"	f
UserInit	src/bochsdbg/mbr.py	/^def UserInit():$/;"	f
_add_root_dir_entry	src/asm/persistence.asm	/^_add_root_dir_entry:$/;"	l
_check_extensions	src/asm/custom_mbr.asm	/^_check_extensions:$/;"	l
_check_extensions	src/asm/persistence.asm	/^_check_extensions:$/;"	l
_check_input	src/asm/check.asm	/^_check_input:$/;"	l
_check_input	src/asm/custom_rsw.asm	/^_check_input:$/;"	l
_check_partition	src/asm/custom_mbr.asm	/^_check_partition:$/;"	l
_check_partition	src/asm/custom_rsw.asm	/^_check_partition:$/;"	l
_decrypt	src/asm/custom_rsw.asm	/^_decrypt:$/;"	l
_disk_error	src/asm/write_sector_lba.asm	/^_disk_error:$/;"	l
_disk_io_error	src/asm/custom_mbr.asm	/^_disk_io_error:$/;"	l
_disk_io_error	src/asm/encode_partition.asm	/^_disk_io_error:$/;"	l
_disk_io_error	src/asm/hide_partition.asm	/^_disk_io_error:$/;"	l
_disk_io_error	src/asm/persistence.asm	/^_disk_io_error:$/;"	l
_disk_io_error	src/asm/read_sector_lba.asm	/^_disk_io_error:$/;"	l
_encrypt	src/asm/check.asm	/^_encrypt:$/;"	l
_encrypt	src/asm/custom_rsw.asm	/^_encrypt:$/;"	l
_end	src/asm/persistence.asm	/^_end:$/;"	l
_end	src/asm/write_sector_lba.asm	/^_end:$/;"	l
_end_loop	src/asm/custom_mbr.asm	/^_end_loop:                  ; after printing an error, we should just loop forever$/;"	l
_end_loop	src/asm/custom_rsw.asm	/^_end_loop:                  ; after printing an error, we should just loop forever$/;"	l
_end_loop	src/asm/encode_partition.asm	/^_end_loop:                  ; after printing an error, we should just loop forever$/;"	l
_end_loop	src/asm/hide_partition.asm	/^_end_loop:                  ; after printing an error, we should just loop forever$/;"	l
_end_loop	src/asm/persistence.asm	/^_end_loop:                  ; after printing an error, we should just loop forever$/;"	l
_found_os	src/asm/custom_mbr.asm	/^_found_os:$/;"	l
_found_os	src/asm/custom_rsw.asm	/^_found_os:$/;"	l
_in_loop	src/asm/custom_rsw.asm	/^_in_loop:$/;"	l
_inject_data	src/asm/persistence.asm	/^_inject_data:$/;"	l
_jump_vbr	src/asm/custom_mbr.asm	/^_jump_vbr:$/;"	l
_load_fat_vbr	src/asm/persistence.asm	/^_load_fat_vbr:$/;"	l
_load_sector_two	src/asm/custom_mbr.asm	/^_load_sector_two:$/;"	l
_load_vbr	src/asm/custom_rsw.asm	/^_load_vbr:$/;"	l
_loop	src/asm/custom_mbr.asm	/^_loop:$/;"	l
_loop	src/asm/custom_rsw.asm	/^_loop:$/;"	l
_no_os_error	src/asm/custom_mbr.asm	/^_no_os_error:$/;"	l
_no_os_error	src/asm/custom_rsw.asm	/^_no_os_error:$/;"	l
_no_part_handler	src/asm/persistence.asm	/^_no_part_handler:$/;"	l
_not_a_vbr_handler	src/asm/persistence.asm	/^_not_a_vbr_handler:$/;"	l
_out_loop	src/asm/custom_rsw.asm	/^_out_loop:$/;"	l
_passed	src/asm/check.asm	/^_passed:$/;"	l
_print_end	src/asm/check.asm	/^_print_end:$/;"	l
_print_end	src/asm/custom_mbr.asm	/^_print_end:$/;"	l
_print_end	src/asm/custom_rsw.asm	/^_print_end:$/;"	l
_print_end	src/asm/encode_partition.asm	/^_print_end:$/;"	l
_print_end	src/asm/hide_partition.asm	/^_print_end:$/;"	l
_print_end	src/asm/persistence.asm	/^_print_end:$/;"	l
_print_end	src/asm/read_sector_lba.asm	/^_print_end:$/;"	l
_print_end	src/asm/sample.asm	/^_print_end:$/;"	l
_print_end	src/asm/write_sector_lba.asm	/^_print_end:$/;"	l
_print_end	src/asm/xor.asm	/^_print_end:$/;"	l
_print_str	src/asm/check.asm	/^_print_str:$/;"	l
_print_str	src/asm/custom_mbr.asm	/^_print_str:$/;"	l
_print_str	src/asm/custom_rsw.asm	/^_print_str:$/;"	l
_print_str	src/asm/encode_partition.asm	/^_print_str:$/;"	l
_print_str	src/asm/hide_partition.asm	/^_print_str:$/;"	l
_print_str	src/asm/persistence.asm	/^_print_str:$/;"	l
_print_str	src/asm/read_sector_lba.asm	/^_print_str:$/;"	l
_print_str	src/asm/sample.asm	/^_print_str:$/;"	l
_print_str	src/asm/write_sector_lba.asm	/^_print_str:$/;"	l
_print_str	src/asm/xor.asm	/^_print_str:$/;"	l
_process_vbr	src/asm/persistence.asm	/^_process_vbr:$/;"	l
_read_error	src/asm/check.asm	/^_read_error:$/;"	l
_read_error	src/asm/custom_rsw.asm	/^_read_error:$/;"	l
_read_error	src/asm/sample.asm	/^_read_error:$/;"	l
_read_error	src/asm/xor.asm	/^_read_error:$/;"	l
_read_lba	src/asm/read_sector_lba.asm	/^_read_lba:$/;"	l
_read_sector	src/asm/check.asm	/^_read_sector:$/;"	l
_read_sector	src/asm/custom_rsw.asm	/^_read_sector:$/;"	l
_read_sector	src/asm/sample.asm	/^_read_sector:$/;"	l
_read_sector	src/asm/xor.asm	/^_read_sector:$/;"	l
_read_sector_chs	src/asm/custom_mbr.asm	/^_read_sector_chs:$/;"	l
_read_sector_lba	src/asm/custom_mbr.asm	/^_read_sector_lba:$/;"	l
_read_sector_lba	src/asm/custom_rsw.asm	/^_read_sector_lba:$/;"	l
_read_sector_lba	src/asm/persistence.asm	/^_read_sector_lba:$/;"	l
_read_sector_lba	src/asm/read_sector_lba.asm	/^_read_sector_lba:$/;"	l
_read_sector_lba	src/asm/write_sector_lba.asm	/^_read_sector_lba:$/;"	l
_read_with_chs	src/asm/custom_mbr.asm	/^_read_with_chs:$/;"	l
_read_with_chs	src/asm/custom_rsw.asm	/^_read_with_chs:$/;"	l
_read_with_lba	src/asm/custom_mbr.asm	/^_read_with_lba:$/;"	l
_read_with_lba	src/asm/custom_rsw.asm	/^_read_with_lba:$/;"	l
_read_with_lba	src/asm/write_sector_lba.asm	/^_read_with_lba:$/;"	l
_read_wrong_sector_error	src/asm/custom_mbr.asm	/^_read_wrong_sector_error:$/;"	l
_reset_disk	src/asm/check.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/custom_mbr.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/custom_rsw.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/encode_partition.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/hide_partition.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/persistence.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/sample.asm	/^_reset_disk:$/;"	l
_reset_disk	src/asm/xor.asm	/^_reset_disk:$/;"	l
_reset_error	src/asm/check.asm	/^_reset_error:$/;"	l
_reset_error	src/asm/custom_rsw.asm	/^_reset_error:$/;"	l
_reset_error	src/asm/sample.asm	/^_reset_error:$/;"	l
_reset_error	src/asm/xor.asm	/^_reset_error:$/;"	l
_scan_for_fat	src/asm/persistence.asm	/^_scan_for_fat:$/;"	l
_scan_partitions	src/asm/custom_mbr.asm	/^_scan_partitions:$/;"	l
_start	src/asm/check.asm	/^_start:$/;"	l
_start	src/asm/custom_mbr.asm	/^_start:$/;"	l
_start	src/asm/custom_rsw.asm	/^_start:$/;"	l
_start	src/asm/encode_partition.asm	/^_start:$/;"	l
_start	src/asm/hide_partition.asm	/^_start:$/;"	l
_start	src/asm/persistence.asm	/^_start:$/;"	l
_start	src/asm/read_keys.asm	/^_start:$/;"	l
_start	src/asm/read_sector_lba.asm	/^_start:$/;"	l
_start	src/asm/sample.asm	/^_start:$/;"	l
_start	src/asm/write_sector_lba.asm	/^_start:$/;"	l
_start	src/asm/xor.asm	/^_start:$/;"	l
_verify_vbr	src/asm/custom_mbr.asm	/^_verify_vbr:$/;"	l
_wipe_part	src/asm/check.asm	/^_wipe_part:$/;"	l
_wipe_part	src/asm/sample.asm	/^_wipe_part:$/;"	l
_wipe_part	src/asm/xor.asm	/^_wipe_part:$/;"	l
_write_error	src/asm/check.asm	/^_write_error:$/;"	l
_write_error	src/asm/custom_rsw.asm	/^_write_error:$/;"	l
_write_error	src/asm/sample.asm	/^_write_error:$/;"	l
_write_error	src/asm/xor.asm	/^_write_error:$/;"	l
_write_sector	src/asm/check.asm	/^_write_sector:$/;"	l
_write_sector	src/asm/custom_mbr.asm	/^_write_sector:$/;"	l
_write_sector	src/asm/sample.asm	/^_write_sector:$/;"	l
_write_sector	src/asm/xor.asm	/^_write_sector:$/;"	l
_write_sector_chs	src/asm/encode_partition.asm	/^_write_sector_chs:$/;"	l
_write_sector_chs	src/asm/hide_partition.asm	/^_write_sector_chs:$/;"	l
_write_sector_lba	src/asm/custom_rsw.asm	/^_write_sector_lba:$/;"	l
_write_sector_lba	src/asm/persistence.asm	/^_write_sector_lba:$/;"	l
_write_sector_lba	src/asm/write_sector_lba.asm	/^_write_sector_lba:$/;"	l
_write_with_lba	src/asm/write_sector_lba.asm	/^_write_with_lba:$/;"	l
_xor	src/asm/custom_rsw.asm	/^_xor:$/;"	l
_xor_end	src/asm/check.asm	/^_xor_end:$/;"	l
_xor_end	src/asm/custom_rsw.asm	/^_xor_end:$/;"	l
_xor_end	src/asm/encode_partition.asm	/^_xor_end:$/;"	l
_xor_end	src/asm/xor.asm	/^_xor_end:$/;"	l
_xor_loop	src/asm/check.asm	/^_xor_loop:$/;"	l
_xor_loop	src/asm/custom_rsw.asm	/^_xor_loop:$/;"	l
_xor_loop	src/asm/encode_partition.asm	/^_xor_loop:$/;"	l
_xor_loop	src/asm/xor.asm	/^_xor_loop:$/;"	l
bits	src/asm/hello_world.asm	/^bits 16                         ; We're working at 16-bit mode here$/;"	l
bits	src/asm/read_keys.asm	/^bits 16                         ; We're working at 16-bit mode here$/;"	l
buf	src/asm/check.asm	/^buf:                        db 0           ; 1-byte buffer to write keypresses to$/;"	d
buf	src/asm/custom_rsw.asm	/^buf:                        db 0           ; 1-byte buffer to write keypresses to$/;"	d
buf	src/asm/read_keys.asm	/^buf:    db 0           ; 1-byte buffer to write keypresses to$/;"	d
buf	src/scripts/create_disk.py	/^buf  = "a" * SECTOR_SIZE$/;"	v
disk_error_msg	src/asm/write_sector_lba.asm	/^disk_error_msg: db "Error reading\/writing to disk!", 0x0d, 0x0a, 0x00$/;"	d
disk_io_error_msg	src/asm/custom_mbr.asm	/^disk_io_error_msg:          db "Disk IO error!", 0x0d, 0x0a, 0x00$/;"	d
disk_io_error_msg	src/asm/encode_partition.asm	/^disk_io_error_msg:          db "[XOR] Disk IO error!", 0x0a, 0x00$/;"	d
disk_io_error_msg	src/asm/hide_partition.asm	/^disk_io_error_msg:          db "[XOR] Disk IO error!", 0x0a, 0x00$/;"	d
disk_io_error_msg	src/asm/persistence.asm	/^disk_io_error_msg:          db "d", 0x0d, 0x0a, 0x00$/;"	d
disk_io_error_msg	src/asm/read_sector_lba.asm	/^disk_io_error_msg:      db "Failed to read sector!", 0x00$/;"	d
drive_type	src/asm/check.asm	/^drive_type:                 dw 0x0000$/;"	d
drive_type	src/asm/custom_mbr.asm	/^drive_type:                 db 0x00$/;"	d
drive_type	src/asm/custom_rsw.asm	/^drive_type:                 db 0x00$/;"	d
drive_type	src/asm/persistence.asm	/^drive_type:                 db 0x00$/;"	d
drive_type	src/asm/sample.asm	/^drive_type:                 dw 0x0000$/;"	d
drive_type	src/asm/xor.asm	/^drive_type:                 dw 0x0000$/;"	d
dw	src/asm/check.asm	/^dw 0xaa55$/;"	l
dw	src/asm/custom_mbr.asm	/^dw 0xaa55$/;"	l
dw	src/asm/custom_rsw.asm	/^dw 0xaa55$/;"	l
dw	src/asm/hello_world.asm	/^dw 0xAA55$/;"	l
dw	src/asm/read_keys.asm	/^dw 0xAA55$/;"	l
dw	src/asm/read_sector_lba.asm	/^dw 0xaa55$/;"	l
dw	src/asm/sample.asm	/^dw 0xaa55$/;"	l
dw	src/asm/write_sector_lba.asm	/^dw 0xaa55$/;"	l
dw	src/asm/xor.asm	/^dw 0xaa55$/;"	l
f	src/scripts/create_disk.py	/^f = open("..\/bin\/boot.bin", "rb")$/;"	v
fat1_addr	src/asm/persistence.asm	/^fat1_addr:                  dd 0x00$/;"	d
fat_entry	src/asm/persistence.asm	/^fat_entry:                  db 0xff, 0xff, 0xff, 0x0f$/;"	d
fix_mbr	src/scripts/fix_mbr_win.py	/^def fix_mbr():$/;"	f
fp_disk	src/scripts/create_disk.py	/^fp_disk = open("..\/bin\/disk.bin", "wb")$/;"	v
halt	src/asm/hello_world.asm	/^halt:	hlt                     ; CPU command to halt the execution$/;"	l
loop	src/asm/check.asm	/^loop:$/;"	l
loop0	src/asm/check.asm	/^loop0:  $/;"	l
loop0	src/asm/read_keys.asm	/^loop0:  $/;"	l
mbr	src/scripts/create_disk.py	/^mbr = f.read()$/;"	v
msg	src/asm/hello_world.asm	/^msg:	db "My name is Randomware: ", 0   ; Our actual message to print$/;"	d
no_fat_found_msg	src/asm/persistence.asm	/^no_fat_found_msg:           db "a", 0x0d, 0x0a, 0x00$/;"	d
no_os_error_msg	src/asm/custom_mbr.asm	/^no_os_error_msg:            db "No operating system found!", 0x0d, 0x0a, 0x00$/;"	d
no_os_error_msg	src/asm/custom_rsw.asm	/^no_os_error_msg:            db "No operating system found!", 0x0d, 0x0a, 0x00$/;"	d
not_a_vbr	src/asm/persistence.asm	/^not_a_vbr:                  db "b", 0x0d, 0x0a, 0x00$/;"	d
num_reserved_sectors	src/asm/persistence.asm	/^num_reserved_sectors:       dw 0x00$/;"	d
org	src/asm/hello_world.asm	/^org 0x7C00                      ; BIOS loads our programm at this address$/;"	l
org	src/asm/read_keys.asm	/^org 0x7C00                      ; BIOS loads our program at this address$/;"	l
part_offset	src/asm/custom_mbr.asm	/^part_offset:                dw 0x0000$/;"	d
part_offset	src/asm/custom_rsw.asm	/^part_offset:                dw 0x0000$/;"	d
pop	src/asm/check.asm	/^    pop dx$/;"	d
pop	src/asm/encode_partition.asm	/^    pop dx                      ; restore disk type$/;"	d
pop	src/asm/read_sector_lba.asm	/^    pop dx$/;"	d
processing_fat_vbr_msg	src/asm/persistence.asm	/^processing_fat_vbr_msg:     db "c", 0x0d, 0x0a, 0x00$/;"	d
push	src/asm/check.asm	/^    push dx$/;"	d
push	src/asm/encode_partition.asm	/^    push dx                     ; we want save disk type$/;"	d
push	src/asm/read_sector_lba.asm	/^    push dx$/;"	d
read_disk_error_msg	src/asm/check.asm	/^read_disk_error_msg:        db "Error reading sector.", 0x0a$/;"	d
read_disk_error_msg	src/asm/custom_rsw.asm	/^read_disk_error_msg:        db "Error reading sector.", 0x0d, 0x0a, 0x00$/;"	d
read_disk_error_msg	src/asm/sample.asm	/^read_disk_error_msg:        db "Error reading sector.", 0x00$/;"	d
read_disk_error_msg	src/asm/xor.asm	/^read_disk_error_msg:        db "Error reading sector.", 0x00$/;"	d
reading_disk_msg	src/asm/check.asm	/^reading_disk_msg:           db "Reading sector 1 of disk!", 0x0a$/;"	d
reading_disk_msg	src/asm/sample.asm	/^reading_disk_msg:           db "Reading sector 1 of disk!", 0x00$/;"	d
reading_disk_msg	src/asm/xor.asm	/^reading_disk_msg:           db "Reading sector 1 of disk!", 0x00$/;"	d
reset_disk_error_msg	src/asm/check.asm	/^reset_disk_error_msg:       db "Error resetting disk.", 0x0a$/;"	d
reset_disk_error_msg	src/asm/custom_rsw.asm	/^reset_disk_error_msg:       db "Error resetting disk.", 0x0d, 0x0a, 0x00$/;"	d
reset_disk_error_msg	src/asm/sample.asm	/^reset_disk_error_msg:       db "Error resetting disk.", 0x00$/;"	d
reset_disk_error_msg	src/asm/xor.asm	/^reset_disk_error_msg:       db "Error resetting disk.", 0x00$/;"	d
right	src/asm/check.asm	/^right:                      db "Congratz!", 0x0a$/;"	d
root_dir_cluster_num	src/asm/persistence.asm	/^root_dir_cluster_num:       dd 0x00$/;"	d
root_dir_entry	src/asm/custom_mbr.asm	/^root_dir_entry:             db 0x4D, 0x42, 0x52, 0x5F, 0x57, 0x49, 0x4E, 0x53, 0x54,$/;"	d
root_dir_lba_addr	src/asm/persistence.asm	/^root_dir_lba_addr:          dd 0x00$/;"	d
secret	src/asm/check.asm	/^secret:                     db "l1st3n t0 ur h34rt", 0x00$/;"	d
secret	src/asm/custom_rsw.asm	/^secret:                     db "l1st3n t0 ur h34rt", 0x00$/;"	d
section	src/asm/read_keys.asm	/^section .text$/;"	l
sectors_per_cluster	src/asm/persistence.asm	/^sectors_per_cluster:        db 0x00$/;"	d
sectors_per_fat	src/asm/persistence.asm	/^sectors_per_fat:            dd 0x00$/;"	d
start	src/asm/hello_world.asm	/^start:$/;"	l
start_of_fs_addr	src/asm/persistence.asm	/^start_of_fs_addr:           dd 0x00$/;"	d
times	src/asm/check.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
times	src/asm/custom_mbr.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
times	src/asm/custom_rsw.asm	/^times 0x1fe - ($ - $$) db 0x00$/;"	l
times	src/asm/hello_world.asm	/^times 510 - ($ - $$) db 0$/;"	l
times	src/asm/read_keys.asm	/^times 510 - ($ - $$) db 0$/;"	l
times	src/asm/read_sector_lba.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
times	src/asm/sample.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
times	src/asm/write_sector_lba.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
times	src/asm/xor.asm	/^times 0x1be - ($ - $$) db 0x00$/;"	l
update_disk	src/scripts/update_disk.py	/^def update_disk():$/;"	f
welcome_msg	src/asm/custom_mbr.asm	/^welcome_msg:                db "My very own MBR!", 0x0d, 0x0a, 0x00$/;"	d
welcome_msg	src/asm/write_sector_lba.asm	/^welcome_msg:    db "Trying to write using LBA!", 0x0d, 0x0a, 0x00$/;"	d
write_error_msg	src/asm/check.asm	/^write_error_msg:            db "Error writing sector.", 0x0a$/;"	d
write_error_msg	src/asm/custom_rsw.asm	/^write_error_msg:            db "Error writing sector.", 0x0d, 0x0a, 0x00$/;"	d
write_error_msg	src/asm/sample.asm	/^write_error_msg:            db "Error writing sector.", 0x00$/;"	d
write_error_msg	src/asm/xor.asm	/^write_error_msg:            db "Error writing sector.", 0x00$/;"	d
wrong	src/asm/check.asm	/^wrong:                      db "RIP my friend!", 0x0a$/;"	d
wrong_sector_msg	src/asm/custom_mbr.asm	/^wrong_sector_msg:           db "Read wrong sector, not a VBR!", 0x0d, 0x0a, 0x00$/;"	d
xor_done	src/asm/encode_partition.asm	/^xor_done:                   db "Finish xor-ing.", 0x00$/;"	d
xor_done	src/asm/xor.asm	/^xor_done:                   db "Finish xor-ing.", 0x00$/;"	d
xor_string	src/asm/check.asm	/^xor_string:                 db "dafuq do u want?", 0x00$/;"	d
xor_string	src/asm/custom_rsw.asm	/^xor_string:                 db "wh4Tz d0_u W4nt?"$/;"	d
xor_string	src/asm/encode_partition.asm	/^xor_string:                 db "dafuq do u want?", 0x00$/;"	d
xor_string	src/asm/xor.asm	/^xor_string:                 db "dafuq do u want?", 0x00$/;"	d
xor_success	src/asm/custom_rsw.asm	/^xor_success:                db "Finish xoring", 0x00$/;"	d
